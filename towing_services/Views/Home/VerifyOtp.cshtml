
@{
    ViewBag.Title = "Verify OTP";
    int remainingAttempts = ViewBag.RemainingAttempts;
    double remainingTime = ViewBag.RemainingTime;
}

<style>
    body {
        background: #f0f0f0;
    }

    .card {
        background: linear-gradient(135deg, #f4f4f4, #ffffff);
        border-radius: 10px;
        box-shadow: 4px 4px 10px #3b5bdb, -4px -4px 10px #033E3E;
    }

 

    .btn {
        position: relative;
        padding: 0.70em 1.5em;
        background-color: #38ACEC;
        border: 4px solid #fff; /* تحديد حدود الزر بلون أبيض */
        color: black;
        font-size: 1.2rem;
        text-transform: uppercase;
        font-weight: bold;
        cursor: pointer;
        border-radius: 5px;
        overflow: hidden;
        align-items: center;
        transition: color 0.3s, border-color 0.3s;
        z-index: 1; /* تأكد أن التأثير يأتي خلف النص */
     
    }

        /* تأثير عند المرور بالماوس على الزر */
        .btn::before {
            content: ''; /* محتوى خالي فقط لإنشاء عنصر إضافي */
            position: absolute;
            top: 0;
            left: -100%; /* وضع العنصر خارج الزر من اليسار */
            width: 100%;
            height: 100%;
            background-color: #15317E; /* لون الخلفية الجديد */
            transition: left 0.5s ease; /* حركة من اليسار إلى اليمين */
            z-index: -1; /* تأكد أن التأثير يأتي خلف النص */
        }

        /* عند المرور بالماوس على الزر */
        .btn:hover {
            color: black;
            border-color: #3b5bdb; /* تغيير لون الحدود عند المرور */
        }

            .btn:hover::before {
                left: 0; 
            }

        .btn:hover {
            color: #ddd;
        }

.card-body {
    justify-content: center; 
    align-items: center; 
    text-align: center;
    display: flex;  /* تم إضافة هذه الخاصية */
    flex-direction: column;  /* لضمان تمركز العناصر بشكل عمودي */
    height: 100%; /* تأكد من أن الحاوية تأخذ كامل المساحة */
}


    .form-control {
        font-size: 28px;
        background-color: transparent;
        border: none;
        border-bottom: 3px solid #007bff;
        border-radius: 0;
    }

        .form-control:focus {
            border-bottom: 3px solid #033E3E;
            box-shadow: none;
            background-color: transparent;
        }
    /*****************/
    .wave-background {
        height: 5vh;
        display: flex;
        justify-content: center;
        align-items: center;
    }

    .hero-text span:first-child {
        color: #033E3E; /* لون الحرف الأول */
    }

    .hero-text span:nth-child(8) {
        color: #033E3E; /* لون الحرف الأول */
    }



    @@keyframes waveEffect {
        0% {
            background-position: 20% 0;
        }

        100% {
            background-position: 0 0;
        }
    }

    @@keyframes colorShift {
        0% {
            background: linear-gradient(46deg, #162252, #368BC1 50%, #3090C7);
        }

        100% {
            background: linear-gradient(46deg, #3090C7, #368BC1 50%, #162252);
        }
    }


    /* التنسيق الأساسي للنص */
    .hero-text {
        font-weight: bold;
        text-align: center;
        display: inline-block;
        word-wrap: break-word; /* يضمن أن النص ينكسر بشكل صحيح داخل الـ div */
    }

        /* تجزئة الكلمة إلى حروف */
        .hero-text span {
            opacity: 0; /* إخفاء الحروف في البداية */
            display: inline-block;
            transform: translateY(-30px); /* يبدأ من أعلى */
            animation: showLetter 1s ease-out forwards;
            font-size: 4rem;
            color: #a5c9e1;
        }

            /* إضافة تأخير بين الحروف */
            .hero-text span:nth-child(1) {
                animation-delay: 0s;
            }

            .hero-text span:nth-child(2) {
                animation-delay: 0.2s;
            }

            .hero-text span:nth-child(3) {
                animation-delay: 0.4s;
            }

            .hero-text span:nth-child(4) {
                animation-delay: 0.6s;
            }

            .hero-text span:nth-child(5) {
                animation-delay: 0.8s;
            }

            .hero-text span:nth-child(6) {
                animation-delay: 1s;
            }

            .hero-text span:nth-child(7) {
                animation-delay: 1.2s;
            }

            .hero-text span:nth-child(8) {
                animation-delay: 1.4s;

            }

            .hero-text span:nth-child(9) {
                animation-delay: 1.6s;
            }

            .hero-text span:nth-child(10) {
                animation-delay: 1.8s;
            }


            

    /* الفراغ بين الكلمتين */
    .space {
        display: inline-block;
        width: 18px; /* تعديل عرض الفراغ */
    }

    /* تأثير الأنيميشن للحروف */
    @@keyframes showLetter {
        0% {
            opacity: 0;
            transform: translateY(-30px); /* يبدأ من أعلى */
        }

        100% {
            opacity: 1;
            transform: translateY(0); /* يظهر في مكانه الطبيعي */
        }
    }
    @@keyframes slideUp {
        0% {
            transform: translateY(30px); /* يبدأ من الأسفل */
            opacity: 0; /* الشفافية تكون صفر */
        }

        100% {
            transform: translateY(0); /* يصل إلى مكانه الطبيعي */
            opacity: 1; /* الشفافية تصبح 1 */
        }
    }

    /* تطبيق الحركة على الكارد */
    .card {
        animation: slideUp 0.8s ease-in-out; /* التأثير يستمر لمدة 0.8 ثانية */
    }
    /* استجابة للشاشات الصغيرة */
    @@media (max-width: 915px) {
        .hero-text span {
            font-size: 3rem;
        }
    }

    @@media (max-width: 576px) {
        .hero-text span {
            font-size: 2rem;
        }
    }
    @@media (max-width: 768px) {
        .form-control {
            font-size: 17px;
        }

        .control-label {
            font-size: 17px;
        }

        .text-danger {
            color: red !important;
            font-size: 15px
        }
        label, p, small {
            font-size: 18px;
            padding: 12px;
            font-weight: bold
        }
    }
    label, p, small {
        font-size: 22px;
        padding: 15px;
        font-weight:bold
    }
    /* تنسيق القائمة المنسدلة */
    .nav-item .dropdown-menu {
        background-color: #f0f0f0; /* لون الخلفية */
        border: none;
        border-radius: 20px; /* زوايا مستديرة */
        box-shadow: 0px 8px 15px rgb(6 34 57 / 0.10); /* ظل ناعم */
        padding: 4px;
        /* إبعاد القائمة عن الحافة اليمنى */
        margin-left: -50px; /* إضافة مسافة من الحافة اليمنى */
    }


    /* عناصر القائمة المنسدلة */
    .dropdown-item {
        font-size: 18px;
        color: #333;
        padding: 10px 20px;
        font-weight: bold;
        transition: all 0.3s ease;
    }

        /* تأثير عند المرور على عنصر القائمة المنسدلة */
        .dropdown-item:hover {
            background-color: #0b2644; /* لون الخلفية عند المرور */
            color: #fff; /* لون النص عند المرور */
            transform: scale(1.05); /* تكبير بسيط */
        }

    /* تصميم السهم */
    .nav-link.dropdown-toggle::after {
        content: ' ▼'; /* إضافة سهم */
        font-size: 12px;
        color: inherit; /* نفس لون النص */
        margin-left: 5px;
        transition: transform 0.3s ease;
    }

    /* دوران السهم عند الفتح */
    .nav-link.dropdown-toggle[aria-expanded="true"]::after {
        transform: rotate(180deg);
    }

    /* تأثير الظهور التدريجي للقائمة */
    .nav-item .dropdown-menu {
        opacity: 0;
        transform: translateY(-10px);
        transition: opacity 0.3s ease, transform 0.3s ease;
    }

        /* عند عرض القائمة */
        .nav-item .dropdown-menu.show {
            opacity: 1;
            transform: translateY(0);
        }
</style>
<div style="padding:30px">

</div>
<div class="wave-background">

    <div class="hero-text d-inline-block " style="max-width: 930px; margin-bottom:10px">
        <span>V</span>
        <span>e</span>
        <span>r</span>
        <span>i</span>
        <span>f</span>
        <span>y</span>
        <span class="space"></span>
        <span>O</span>
        <span>T</span>
        <span>P</span>
     
    </div>
</div>
<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-lg-6 col-md-8 col-sm-12">
            <div class="card ">
                <div class="card-body">

                    <!-- Alerts for Success/Error Messages -->
                    @if (TempData["ErrorMessage"] != null)
                    {
                        <div class="alert alert-danger text-center">
                            @TempData["ErrorMessage"]
                        </div>
                    }
                    @if (TempData["SuccessMessage"] != null)
                    {
                        <div class="alert alert-success text-center">
                            @TempData["SuccessMessage"]
                        </div>
                    }

                    <!-- OTP Input Form -->
                    <form asp-action="VerifyOtp" method="post">
                        <div class="mb-3">
                            <label for="otpInput" class="form-label">Enter the OTP sent to your email</label>
                            <input type="text" class="form-control" id="otpInput" name="enteredOtp" placeholder="Enter OTP" required>
                        </div>

                        <button type="submit" class="btn  mt-3 ">Verify OTP</button>
                    </form>

                    <!-- Countdown Timer -->
                    <div class="text-center mt-3">
                        <p class="mb-1">Time remaining: <span id="timer" class="fw-bold">@remainingTime</span> seconds</p>
                        <p class="mb-1">Remaining attempts: <span class="fw-bold">@remainingAttempts</span></p>
                    </div>

                    <!-- Resend OTP Button -->
                    <form asp-action="ResendOtp" method="post" id="resendForm" class="text-center mt-3" style="display: none;">
                        <button type="submit" class="btn ">Resend OTP</button>
                    </form>

                    <div class="text-center mt-3 text-muted">
                        <small>If you do not receive the OTP, please check your spam folder.</small>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div style="padding:40px">

</div>

@section Scripts {
    <script>
        // Initialize timer and countdown logic
        let timerElement = document.getElementById('timer');
        let resendForm = document.getElementById('resendForm');
        let remainingTime = parseInt(timerElement.innerText);

        const countdown = setInterval(() => {
            if (remainingTime <= 0) {
                clearInterval(countdown);
                resendForm.style.display = "block"; // Show Resend OTP button
                timerElement.innerText = "Expired";
            } else {
                remainingTime--;
                timerElement.innerText = remainingTime; // Update remaining time
            }
        }, 1000);
    </script>
}

