<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet">

<style>
    body {
        background: #f0f0f0;
    }

    .card {
        background: linear-gradient(135deg, #f4f4f4, #ffffff);
        border-radius: 15px;
        max-width: 900px; /* زيادة عرض الكارد */
        margin: 0 auto;
        box-shadow: 4px 4px 20px #3b5bdb, -4px -4px 20px #033E3E;
        padding: 50px; /* زيادة المساحة الداخلية */
    }

    .form-control {
        font-size: 22px; /* تكبير حجم النص في الحقول */
        background-color: transparent;
        border: none;
        border-bottom: 3px solid #007bff;
        border-radius: 0;
        padding: 10px; /* زيادة المساحة داخل الحقول */
    }

        .form-control:focus {
            border-bottom: 3px solid #033E3E;
            box-shadow: none;
            background-color: transparent;
        }

    label {
        font-size: 28px; /* تكبير حجم النص */
        font-weight: bold;
        margin-bottom: 10px;
        display: block;
        color: #033E3E;
    }

    .input-group-text {
        background-color: transparent;
        border: none;
        cursor: pointer;
    }

        .input-group-text i {
            font-size: 1.5rem; /* تكبير حجم الأيقونة */
            color: #007bff; /* لون الأيقونة */
            transition: color 0.3s ease;
        }

        .input-group-text:hover i {
            color: #033E3E; /* تغيير لون الأيقونة عند المرور */
        }

    .btn {
        position: relative;
        padding: 0.70em 1.5em;
        background-color: #38ACEC;
        border: 4px solid #fff;
        color: black;
        font-size: 1.2rem;
        text-transform: uppercase;
        font-weight: bold;
        cursor: pointer;
        border-radius: 5px;
        overflow: hidden;
        align-items: center;
        transition: color 0.3s, border-color 0.3s;
        z-index: 1;
    }

        .btn::before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background-color: #15317E;
            transition: left 0.5s ease;
            z-index: -1;
        }

        .btn:hover {
            color: black;
            border-color: #3b5bdb; /* تغيير لون الحدود عند المرور */
        }

            .btn:hover::before {
                left: 0;
            }

        .btn:hover {
            color: #ddd;
        }



    label {
        font-size: 25px;
        font-weight: bold
    }
    /*******************/
    .wave-background {
        height: 5vh;
        display: flex;
        justify-content: center;
        align-items: center;
    }

    .hero-text span:first-child {
        color: #033E3E; /* لون الحرف الأول */
    }

    .hero-text span:nth-child(7) {
        color: #033E3E; /* لون الحرف الأول */
    }



    @@keyframes waveEffect {
        0% {
            background-position: 20% 0;
        }

        100% {
            background-position: 0 0;
        }
    }

    @@keyframes colorShift {
        0% {
            background: linear-gradient(46deg, #162252, #368BC1 50%, #3090C7);
        }

        100% {
            background: linear-gradient(46deg, #3090C7, #368BC1 50%, #162252);
        }
    }


    /* التنسيق الأساسي للنص */
    .hero-text {
        font-weight: bold;
        text-align: center;
        display: inline-block;
        word-wrap: break-word; /* يضمن أن النص ينكسر بشكل صحيح داخل الـ div */
    }

        /* تجزئة الكلمة إلى حروف */
        .hero-text span {
            opacity: 0; /* إخفاء الحروف في البداية */
            display: inline-block;
            transform: translateY(-30px); /* يبدأ من أعلى */
            animation: showLetter 1s ease-out forwards;
            font-size: 4rem;
            color: #a5c9e1;
        }

            /* إضافة تأخير بين الحروف */
            .hero-text span:nth-child(1) {
                animation-delay: 0s;
            }

            .hero-text span:nth-child(2) {
                animation-delay: 0.2s;
            }

            .hero-text span:nth-child(3) {
                animation-delay: 0.4s;
            }

            .hero-text span:nth-child(4) {
                animation-delay: 0.6s;
            }

            .hero-text span:nth-child(5) {
                animation-delay: 0.8s;
            }

            .hero-text span:nth-child(6) {
                animation-delay: 1s;
            }

            .hero-text span:nth-child(7) {
                animation-delay: 1.2s;
            }

            .hero-text span:nth-child(8) {
                animation-delay: 1.4s;
            }

            .hero-text span:nth-child(9) {
                animation-delay: 1.6s;
            }

            .hero-text span:nth-child(10) {
                animation-delay: 1.7s;
            }

            .hero-text span:nth-child(11) {
                animation-delay: 1.8s;
            }

            .hero-text span:nth-child(12) {
                animation-delay: 1.9s;
            }

            .hero-text span:nth-child(13) {
                animation-delay: 2s;
            }

            .hero-text span:nth-child(14) {
                animation-delay: 2.1s;
            }



    /* الفراغ بين الكلمتين */
    .space {
        display: inline-block;
        width: 18px; /* تعديل عرض الفراغ */
    }

    /* تأثير الأنيميشن للحروف */
    @@keyframes showLetter {
        0% {
            opacity: 0;
            transform: translateY(-30px); /* يبدأ من أعلى */
        }

        100% {
            opacity: 1;
            transform: translateY(0); /* يظهر في مكانه الطبيعي */
        }
    }

    @@keyframes slideUp {
        0% {
            transform: translateY(30px); /* يبدأ من الأسفل */
            opacity: 0; /* الشفافية تكون صفر */
        }

        100% {
            transform: translateY(0); /* يصل إلى مكانه الطبيعي */
            opacity: 1; /* الشفافية تصبح 1 */
        }
    }
    /* استجابة للشاشات الصغيرة */
    @@media (max-width: 915px) {
        .hero-text span {
            font-size: 3rem;
        }
    }

    @@media (max-width: 576px) {
        .hero-text span {
            font-size: 2rem;
        }
    }

    @@media (max-width: 768px) {
        .form-control {
            font-size: 17px !important;
        }

        .control-label {
            font-size: 17px !important;
        }

        label {
            font-size: 18px;
            padding: 12px;
            font-weight: bold
        }

        .input-group-text i {
            font-size: 1.2rem; /* تكبير حجم الأيقونة */
            color: #007bff; /* لون الأيقونة */
            transition: color 0.3s ease;
        }

        .btn {
            padding: 0.50em 1em;
        }
    }

    .container {
        padding: 0;
    }

    .alert {
        background-color: #1a1a3c; /* خلفية داكنة */
        color: white; /* نص أبيض */
        margin: 10px auto; /* محاذاة في المنتصف */
        width: 40%; /* عرض النص فقط حسب حجمه */
        max-width: 80%; /* أقصى عرض 80% */
        text-align: center; /* محاذاة النص في المنتصف */
        border-radius: 5px; /* حدود دائرية */
        padding: 1%;
        font-size: 24px
    }
    /* استعلام وسائط للأجهزة الصغيرة */
    @@media (max-width: 768px) {
        .alert {
            width: 70%; /* تغيير العرض للأجهزة الصغيرة */
            font-size: 20px; /* تقليل حجم الخط */
        }
    }
</style>

<div style="padding:8px">

</div>
<div class="wave-background">

    <div class="hero-text d-inline-block " style="max-width: 930px; margin-bottom:10px">
        <span>R</span>
        <span>e</span>
        <span>s</span>
        <span>e</span>
        <span>t</span>
        <span class="space"></span>
        <span>P</span>
        <span>a</span>
        <span>s</span>
        <span>s</span>
        <span>w</span>
        <span>o</span>
        <span>r</span>
        <span>d</span>


    </div>
</div>

<!-- عرض رسائل الأخطاء إذا كانت موجودة في ModelState -->
@foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
{
    <div class="alert alert-danger">
        @error.ErrorMessage
    </div>
}


<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-lg-6 col-md-9 col-sm-12">
            <div class="card">
                <form method="post">
                    @Html.AntiForgeryToken()



                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        <label for="NewPassword">New Password</label>
                        <div class="input-group">
                            <input type="password" class="form-control" id="NewPassword" name="NewPassword" required />
                            <div class="input-group-append">
                                <span class="input-group-text" id="toggleNewPassword" style="cursor: pointer;">
                                    <i class="fas fa-eye"></i>
                                </span>
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        <label for="ConfirmPassword">Confirm New Password</label>
                        <div class="input-group">
                            <input type="password" class="form-control" id="ConfirmPassword" name="ConfirmPassword" required />
                            <div class="input-group-append">
                                <span class="input-group-text" id="toggleConfirmPassword" style="cursor: pointer;">
                                    <i class="fas fa-eye"></i>
                                </span>
                            </div>
                        </div>
                    </div>

                    <input type="hidden" name="Email" value="@Model.Email" />
                    <input type="hidden" name="Token" value="@Model.Token" />

                    <div style="text-align: center;">
                        <button type="submit" class="btn">Reset Password</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<script>
    function togglePassword() {
        var passwordFields = document.querySelectorAll('input[type="password"]');
        var icons = document.querySelectorAll('.input-group-text i');

        passwordFields.forEach(function (field) {
            if (field.type === "password") {
                field.type = "text";
            } else {
                field.type = "password";
            }
        });

        icons.forEach(function (icon) {
            if (icon.classList.contains("fa-eye")) {
                icon.classList.remove("fa-eye");
                icon.classList.add("fa-eye-slash");
            } else {
                icon.classList.remove("fa-eye-slash");
                icon.classList.add("fa-eye");
            }
        });
    }

    document.getElementById("toggleNewPassword").addEventListener("click", togglePassword);
    document.getElementById("toggleConfirmPassword").addEventListener("click", togglePassword);
</script>
